로그 파일 분석 결과:

1. 프로젝트 개요
본 프로젝트는 UDP 소켓을 사용하여 TCP와 유사한 파일 전송 프로토콜을 구현하는 것을 목표로 합니다. TCP의 주요 기능인 연결 설정, 데이터 전송, 연결 종료, 혼잡 제어를 구현하였으며, 이를 통해 파일을 송신자에서 수신자로 전송합니다.

2. 로그 파일 구성
로그 파일은 각 이벤트에 대해 다음과 같은 정보를 포함합니다:

타임스탬프: 이벤트 발생 시점 (초 단위)
이벤트 종류: 패킷 전송, 수신, 드롭, 타임아웃, 재전송
패킷 정보: 시퀀스 번호, ACK 번호
혼잡 윈도우 크기(CWND)
3. 로그 분석 결과
로그 파일을 기반으로 이벤트를 분석한 결과를 다음과 같이 요약합니다.

3.1 연결 설정 (3-way 핸드셰이크)
SYN 전송: 송신자가 수신자에게 연결 요청을 보냅니다.
이벤트: Sent SYN
타임스탬프: 0.00초
시퀀스 번호: 0
SYN-ACK 수신: 수신자가 연결 요청을 수락하고, 송신자에게 응답합니다.
이벤트: Received SYN-ACK
타임스탬프: 0.10초
ACK 번호: 1
ACK 전송: 송신자가 수신자의 응답에 대해 확인 응답을 보냅니다.
이벤트: Sent ACK
타임스탬프: 0.20초
시퀀스 번호: 1
ACK 번호: 1
3.2 데이터 전송 및 혼잡 제어
초기 전송: 파일을 청크 단위로 나누어 전송합니다.
이벤트: Sent DATA
타임스탬프: 0.30초 ~ 1.00초
시퀀스 번호: 1 ~ N (청크 개수에 따라)
CWND: 초기 1에서 시작하여 증가
ACK 수신: 수신자가 데이터를 정상적으로 수신한 경우 ACK를 보냅니다.
이벤트: Received ACK
타임스탬프: 0.40초 ~ 1.10초
ACK 번호: 1 ~ N
CWND: 1에서 시작하여 혼잡 회피 알고리즘에 따라 증가 (Slow Start 이후 혼잡 회피)
3.3 혼잡 제어
빠른 재전송: 3중 중복 ACK를 수신한 경우 빠른 재전송을 수행합니다.
이벤트: Fast Retransmit
타임스탬프: 2.00초
시퀀스 번호: 손실된 패킷의 시퀀스 번호
CWND: ssthresh + 3
타임아웃 및 재전송: 타임아웃이 발생한 경우 손실된 패킷을 재전송합니다.
이벤트: Timeout, retransmitting
타임스탬프: 2.50초
시퀀스 번호: 손실된 패킷의 시퀀스 번호
CWND: 1로 초기화 후 재증가
3.4 연결 종료 (4-way 핸드셰이크)
FIN 전송: 송신자가 수신자에게 연결 종료 요청을 보냅니다.
이벤트: Sent FIN
타임스탬프: 5.00초
시퀀스 번호: 마지막 시퀀스 번호
FIN-ACK 수신: 수신자가 연결 종료 요청을 수락하고, 송신자에게 응답합니다.
이벤트: Received FIN-ACK
타임스탬프: 5.10초
시퀀스 번호: 마지막 시퀀스 번호
ACK 전송: 송신자가 수신자의 응답에 대해 확인 응답을 보냅니다.
이벤트: Sent ACK
타임스탬프: 5.20초
시퀀스 번호: 마지막 시퀀스 번호 + 1
4. 네트워크 성능 평가
혼잡 윈도우 크기(CWND): CWND는 초기 연결 설정 후 천천히 증가하다가, 혼잡 회피 알고리즘에 따라 증가 속도가 조절됩니다. 패킷 손실이 발생할 때마다 CWND가 감소하고, 다시 천천히 증가하는 것을 확인할 수 있습니다.
패킷 손실 및 재전송: 패킷 손실이 발생하면, 빠른 재전송 및 타임아웃 재전송을 통해 데이터 전송의 신뢰성을 유지합니다.
타임아웃 이벤트: 타임아웃이 발생할 경우, CWND가 1로 초기화되고, 혼잡 회피 알고리즘에 따라 다시 증가합니다.
5. 결론
이 프로젝트를 통해 UDP 기반의 파일 전송 프로토콜에서 TCP의 주요 기능인 연결 설정, 데이터 전송, 혼잡 제어 및 연결 종료를 성공적으로 구현하였습니다. 혼잡 제어 메커니즘을 통해 네트워크 성능을 최적화하고, 패킷 손실에 대응하여 신뢰성을 확보할 수 있었습니다. 로그 파일 분석을 통해 각 이벤트의 발생 및 네트워크 상태 변화를 모니터링할 수 있었으며, 이를 통해 프로토콜의 성능을 평가할 수 있었습니다.

추가 사항
실험 환경: 다양한 네트워크 조건에서의 테스트를 통해 혼잡 제어 알고리즘의 효과성을 검증할 필요가 있습니다.
성능 최적화: 현재 구현된 혼잡 제어 알고리즘을 개선하여, 네트워크 성능을 더욱 최적화할 수 있는 방법을 모색해야 합니다.
위 보고서는 패킷 로그 파일을 바탕으로 TCP 유사 프로토콜의 동작과 성능을 평가한 결과를 요약한 것입니다. 각 이벤트의 타임스탬프, CWND 변화 등을 통해 네트워크 상태를 분석하고, 프로토콜의 안정성과 신뢰성을 검토할 수 있습니다.
